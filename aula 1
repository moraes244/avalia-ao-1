Oferece maior controle sobre o hardware, mas é mais difícil de programar.”
As linguagens de baixo nível (Assembly, código de máquina) permitem que o programador manipule diretamente registradores, memória e instruções do processador, resultando em alto controle — porém com sintaxe complexa e menos abstrações
en.wikipedia.org+5reddit.com+5reddit.com+5
.
❓ Questão 02

Resposta: b) “C, Java e Python”
São linguagens de alto nível, providenciando abstrações que facilitam o desenvolvimento e são independentes de hardware. Assembly e código-máquina são exemplos de baixo nível e, portanto, não entram na categoria .
❓ Questão 03

Resposta: a) “É traduzido para código de máquina antes de ser executado.”
Linguagens compiladas passam por uma etapa de compilação que gera um programa executável ou código de máquina antecipadamente, proporcionando melhor desempenho
scaler.com+1caetano.neocities.org+1
.
❓ Questão 04

Resposta: b) “Podem ser executados imediatamente sem uma etapa de compilação.”
Programas interpretados são executados diretamente pelo intérprete, linha a linha, dispensando a compilação prévia — o que acelera o desenvolvimento e facilita testes e portabilidade
medium.com+2caetano.neocities.org+2perfectelearning.com+2
.
❓ Questão 05

Resposta: c) “O código é compilado para bytecode e, em seguida, interpretado pela JVM.”
Em Java, o código-fonte é convertido em bytecode (.class) por um compilador e depois esse bytecode é executado pela JVM, que o interpreta ou compila em tempo de execução (JIT).
❓ Questão 06

Resposta: b) “Definir passos lógicos para solucionar um problema.”
Um algoritmo é uma sequência de instruções finitas e bem definidas, criadas para resolver um problema ou executar uma tarefa.
❓ Questão 07

Resposta: c) “A habilidade de organizar e estruturar pensamentos para resolver problemas de forma lógica e eficiente.”
A lógica de programação refere-se ao raciocínio — decomposição, sequenciamento, tomada de decisão — utilizado para elaborar algoritmos e estruturar soluções de softwar
